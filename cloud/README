Basic Instructions - subject to major changes

Assumption: You're on a linux or MacOS and in a terminal window. You
also have access to the `git` utility.

1. install VirtualBox onto your local laptop or workstation
  https://virtualbox.org

2. install Vagrant onto your local laptop or workstation
  https://www.vagrantup.com

NOTE: "bento" refers to official Vagrant base images found at
  https://app.vagrantup.com/bento
in this case we're using the image available at
  https://app.vagrantup.com/bento/boxes/ubuntu-18.10

3. ON HOST machine (laptop):
  % git clone https://github.com/jasonfleming/asgs.git
  % cd asgs/cloud/bento-ubuntu-18.10
  % vagrant up
  % vagrant ssh                                  # you are now on the virtual machine

4. ON GUEST machine (vm), initialize ASGS on the virtual machine
  $ bash init-asgs.sh .                          # this file is in $HOME
  $ . $HOME/.bash_profile                        # source's perlbrew rc file, sets perl the one we want
  $ bash $HOME/asgs/cloud/general/init-adcirc.sh # will prompt for Github username and password

NOTE: init-adcirc.sh pulls down asgs from GitHub (no credentials,
required), it also attempts to pull down adcirc-cg but it requires
your GitHub username/password AND access to the adcirc-cg repo.

NOTE: the script used to install perlbrew, then to use perlbrew to
install the version of Perl we want is a little flaky. Feedback on
the user experience will help make it more robust.

More Information

Vagrant is a nice utility that allows one to manage headless virtual
machines on their laptops or work stations. Most use VirtualBox as the
VM hypervisor, but it supports a variety of platforms. It works by
starting with a vanilla base image (e.g., bento-ubuntu-18.10) and
provides a configuration file (Vagrantfile) where a user can define
how they want the virtual machine provisioned (set up).

The purpose of providing a set of Vagrant provisioning scripts inside
of this repo is to create a starting point for anyone wanting to run
or develop ASGS locally. In the future it might be the basis for
provisioning on actual cloud infrastructures (which Vagrant does
support).

Have fun!

